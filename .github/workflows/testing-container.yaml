#workflow
name: testing-container
on:
  workflow_dispatch:
  #schedule:
  #  - cron:  '0 0 * * 0'

jobs:
  codeql-scan:
    uses: bruce-wh-li/startup-sample-project-aws-containers/.github/workflows/codeql.yaml@main

  trivy-image-scan:  #docker image scan
    uses: bruce-wh-li/startup-sample-project-aws-containers/.github/workflows/trivy-container.yaml@main
    with:
      IMAGE: brucecruise/bcgov-nginx-demo
      TAG: latest

  trivy-iac-scan:
    name: Trivy IaC scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config' # iac mode
          hide-progress: false
          format: 'sarif'
          output: 'trivy-iac-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-iac-results.sarif'

  trivy-repo-scan:
    name: Trivy Repo scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'     # github repo
          ignore-unfixed: true
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-repo-results.sarif'
          exit_code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-repo-results.sarif'


  trivy-ecr-scan:
    name: Trivy ECR Scan
    environment: tools
    env:
      IMAGE_ID: ${{ secrets.AWS_ECR_URI }}
      #TF_VERSION: 1.2.2
      #TG_VERSION: 0.37.1
      #TG_SRC_PATH: terraform
      #TFC_WORKSPACE: dev
    permissions:
      id-token: write # This is required for requesting the JWT
      actions: read   # This is required for actions/checkout
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get latest hash
        id: get-latest-hash
        uses: nmasur/latest-ecr-image-tag@v1
        with: 
          REPOSITORY_NAME: ssp
      - run: echo "${{ steps.get-latest-hash.outputs.hash }}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          #image-ref: 'aws_account_id.dkr.ecr.region.amazonaws.com/imageName:${{ github.sha }}'
          image-ref:  '${{secrets.AWS_ECR_URI}}:${{ steps.get-latest-hash.outputs.hash }}'
          format: 'sarif'
          output: 'trivy-ecr-results.sarif'
      #  env:
      #    AWS_ACCESS_KEY_ID: key_id
      #    AWS_SECRET_ACCESS_KEY: access_key
      #    AWS_DEFAULT_REGION: us-west-2

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-ecr-results.sarif'

  owasp-scan:
    uses: bruce-wh-li/startup-sample-project-aws-containers/.github/workflows/owasp-scan.yaml@main
    with:
      ZAP_SCAN_TYPE: 'full' # Accepted values are base and full.
      ZAP_TARGET_URL: https://dwv62mzgp1214.cloudfront.net/
      ZAP_DURATION: '2'
      ZAP_MAX_DURATION: '5'
      ZAP_GCP_PUBLISH: false
      #ZAP_GCP_PROJECT: phronesis-310405  # Only required if ZAP_GCP_PUBLISH is TRUE
      #ZAP_GCP_BUCKET: 'zap-scan-results' # Only required if ZAP_GCP_PUBLISH is TRUE
    #secrets:
    #  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }} # Only required if ZAP_GCP_PUBLISH is TRUE

  checkov-scan: 
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
# for details, refers to https://github.com/bridgecrewio/checkov-action

    - name: test_checkov_scan
    #- name: Test with Checkov
    #  id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: /
#Skip all checks that are MEDIUM severity or lower, 
#as well as check CKV_789 (assume this is a high severity check):
        skip-check: MEDIUM,CKV_789 
        framework: terraform  #cloudformation,terraform,kubernetes
        output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
        output_file_path: chekov-results.sarif # folder and name of results file
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'chekov-results.sarif'

  ecr-scan:
    runs-on: ubuntu-latest
    name: ecr image scanning 
    environment: tools
    env:
      IMAGE_ID: ${{ secrets.AWS_ECR_URI }}
      #TF_VERSION: 1.2.2
      #TG_VERSION: 0.37.1
      #TG_SRC_PATH: terraform
      #TFC_WORKSPACE: dev
    permissions:
      id-token: write # This is required for requesting the JWT
      actions: read   # This is required for actions/checkout
      contents: read
      security-events: write
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get latest hash
        id: get-latest-hash
        uses: nmasur/latest-ecr-image-tag@v1
        with: 
          REPOSITORY_NAME: ssp
      - run: echo "${{ steps.get-latest-hash.outputs.hash }}"

      - name: Scan Docker image
        id: docker-scan
        uses: alexjurkiewicz/ecr-scan-image@v1.7.1
        with:
          repository: ssp
          tag: ${{ steps.get-latest-hash.outputs.hash }}
          fail_threshold: medium
          # ignore_list: |
          #   CVE-2014-7654321
          #   CVE-2014-456132
        # Access scan results in later steps
      - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."

  rocketchat-workflow-failed-status: 
    name: Post workflow failed status to RC  
    if: failure()
    runs-on: ubuntu-latest
    needs:  
      - owasp-scan 
      - trivy-image-scan  
      - checkov-scan  
      - codeql-scan   
      - trivy-iac-scan  
      - trivy-repo-scan  
      # - trivy-ecr-scan
      # - ecr-scan
    steps:
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master       
        # trivy-image-scan.failure() |checkov-scan.failure() |
        #      codeql-scan.failure() | trivy-iac-scan.failure() | trivy-repo-scan.failure() |
        #      trivy-ecr-scan.failure() | ecr-scan.failure()}}
        with:
          type: ${{ job.status }}
          job_name: '*more than 1 Application Security Check(s) Job Failed*'
          mention: 'here'
          mention_if: 'failure'
          channel: '#bruce-testing'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
          exit_code: '1'

  rocketchat-workflow-successful-status: 
    name: Post workflow successful status to RC  
    needs:  
      - owasp-scan 
      - trivy-image-scan  
      - checkov-scan  
      - codeql-scan   
      - trivy-iac-scan  
      - trivy-repo-scan  
      # - trivy-ecr-scan
      # - ecr-scan
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        #if: always()
        with:
          type: ${{ job.status }}
          job_name: '*All Application Security Check Passed*'
          mention: 'here'
          mention_if: 'failure'
          channel: '#bruce-testing'
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}

##=====
#  ecr_scan:
#    name: ecr image scanning 
#    environment: tools
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#    runs-on: ubuntu-latest
    # steps:
    #   - name: Check out the repo
    #     uses: actions/checkout@v2

    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v1
    #     with:
    #       role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
    #       aws-region: ca-central-1

    #   - name: Login to Amazon ECR
    #     id: login-ecr
    #     uses: aws-actions/amazon-ecr-login@v1

    #   - name: Get latest hash
    #     id: get-latest-hash
    #     uses: nmasur/latest-ecr-image-tag@v1
    #     with: 
    #       REPOSITORY_NAME: ssp
    #   - run: echo "${{ steps.get-latest-hash.outputs.hash }}"

    #   - name: Scan Docker image
    #     id: docker-scan
    #     uses: alexjurkiewicz/ecr-scan-image@v1.7.1
    #     with:
    #       repository: ssp
    #       tag: ${{ steps.get-latest-hash.outputs.hash }}
    #       # fail_threshold: medium
    #       # ignore_list: |
    #       #   CVE-2014-7654321
    #       #   CVE-2014-456132
    #   # Access scan results in later steps
    #   - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."

#  slack-workflow-status:
#    if: always()
#    name: Post Workflow Status To Slack
#    needs:
#      - codeql-scan
#      - build-push
#      - trivy-image-scan
#      - ecr_scan
#      - checkov_scan
##      - sonar-repo-scan
##      - sonar-maven-scan
#      - owasp-scan
#    runs-on: ubuntu-latest
#    steps:
#      - name: Slack Workflow Notification
#        uses: Gamesight/slack-workflow-status@master
#        with:
#          # Required Input
#          repo_token: ${{secrets.GITHUB_TOKEN}}
#          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
#          name: 'Github Workflows'
#          icon_emoji: ':fire:'
#          icon_url: 'https://img.icons8.com/material-outlined/96/000000/github.png'
